#!/usr/local/bin/perl -w
$debug = 0;
use lib "$ENV{TD}/..";
use UI::Assign qw(:all);
$in = qx(./yamlify ./commands.plus);
my $ref = yaml_in( $in); 
#print yaml_out $ref;
# exit;
my $output;
map{ my $key = $_;
	$debug and print "key: $key\n";
	map {  #print $_, $/;
		my $func = $_;	 # reference to a hash
		#print "function: " , keys %{$func}, $/;
		my ($function) = keys %{$func};
		$debug and print "function: " , $function, $/;
		$debug and print "found: " , ref $func->{$function}, $/;
		#print keys %{ $func->{$function} }, $/;
		$output->{$function} = $func->{$function};
=comment
		print keys 
=cut
		
	}  @{ $ref->{$key} } # ordered array
			

} keys %{ $ref };

$debug and print join $/, "Output hash keys", keys %{ $output };

map { my $func = $_; 
	#print join (" ", keys %{ $output->{$func}}  ), $/;
	print join (" ", $func, $output->{$func}->{short}), $/;
} keys %{ $output }

		#print "found2: " , ref $func->{function}->{short};
		#print join " ", $function, $func->{function}->{short}, $/;
