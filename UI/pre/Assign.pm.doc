package ::Assign;

use 5.008;
use strict;
use warnings;

require Exporter;

our @ISA = qw(Exporter);

# Items to export into callers namespace by default. Note: do not export
# names by default without a very good reason. Use EXPORT_OK instead.
# Do not simply export all your public functions/methods/constants.

# This allows declaration	use Assign ':all';
# If you do not need this, moving things directly into @EXPORT or @EXPORT_OK
# will save memory.
our %EXPORT_TAGS = ( 'all' => [ qw(

		assign_vars
		store_vars
		yaml_out
		yaml_in
		create_dir
		join_path
		wav_off
		strip_all
		strip_blank_lines
		strip_comments
		remove_spaces

	
) ] );

our @EXPORT_OK = ( @{ $EXPORT_TAGS{'all'} } );

our @EXPORT = qw(
	
);

our $VERSION = '0.01';

__END__
# Below is stub documentation for your module. You'd better edit it!

=head1 NAME

Assign - Perl extensions for persistent variables and utility functions

=head1 SYNOPSIS

		assign_vars( $hash_ref, @variable_list)
		store_vars( $hash_ref, $file)??
		yaml_out( $hash_ref )
		yaml_in( $string )
		create_dir( $path )
		join_path( $dir1, $subdir, $subsubdir)
		wav_off( "sax_3.wav")
		strip_all
		strip_blank_lines
		strip_comments
		remove_spaces


  use Assign;

=head1 ABSTRACT

=head1 DESCRIPTION

=head2 EXPORT

None by default.

=head1 SEE ALSO

=head1 AUTHOR

Joel Roth, E<lt>jroth@pobox.comE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright 2007 by Joel Roth

=cut
