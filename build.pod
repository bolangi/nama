=head1 BUILD INSTRUCTIONS

You may decide to clone the Nama's github repository and
from source rather than installing from CPAN.  It is much
easier to browse or hack on Nama this way. Functionality is
separated into a number of files, and you will see
C<$::package_var> instead of
C<$Audio::Nama::package_var>.

You can get also updates more quickly and can share patches
with other developers.

=head2 Procedure

For typical build and test:

	cpan Text::Template
	git-clone git://github.com/bolangi/nama.git
	cd nama/src
	./build
	./ui

To install the module, do as usual:

	cd ..
	perl Makefile.PL
	make install
    
=head2 How it works

The F<build> script creates the perl modules for the
distribution under the F<nama/lib> directory using F<*.p>,
F<*.pl>, F<*.t> and other files in the F<nama/src> directory.

F<build> looks into the F<*.p> files for lines that look
like:

    [% somefile.pl %]

This notation is analogous to the C-preprocessor #include
directive: F<somefile.pl> gets included in the source
at that point. Some of these include lines are more complicated:

    [% qx(./strip_comments ./grammar_body) %]

Here the preprocessor runs the script F<strip_comments> on
F<grammar_body>, removing text that would choke the parser
generator.

F<Build> provides a few parameters to the preprocessing
script F<preproc>, which uses the Text::Template to perform
most of the required substitutions.

To see the names of the files and scripts used to build the
modules type:

	ls *.p        
	grep '\[%' *  # shows all include directives
