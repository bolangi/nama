#!/usr/bin/env perl
use warnings;
no warnings "uninitialized";
$debug = 0;
use Data::YAML::Reader;
use IO::All;
my $yr = Data::YAML::Reader->new;
$in = qx(cat ./commands.yml);
my $ref = yaml_in( $in); 
#print yaml_out $ref;
#exit;
map { my $func = $_; 
	my @parts = ($func, split " ", $ref->{$func}->{short});
	my @all_parts = @parts;
	my $full = shift @parts;
	my @short = @parts;
	my $end_anchor = "end";
	push @abbrevs,	"_$full: " . join(" | " , add_break(@all_parts))  ;
	push @stubs,   	"$full: _$full $end_anchor { 1 }";
	push @commands,	"command: $full";
} sort keys %{ $ref };
print join "\n", @commands, @abbrevs, @stubs ;
sub yaml_in {
	# $debug2 and print "&yaml_in\n";
	my $file = shift;
	my $yaml; 
	if ($file !~ /\n/) {
		$debug and print "assuming yaml filename input\n";
		$yaml = io($file)->all;
	} else { 
		$debug and print "assuming yaml text input\n";
		$yaml = $file;
	}
	$yr->read( $yaml ); # returns ref
}
sub add_break { map{ qq(/$_\\b/) } @_ }
