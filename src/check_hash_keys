#!/usr/bin/perl
use Modern::Perl;
use File::Slurp;
# get registered keys by combining contents of two files 
my %var_map = map{ split " ", $_ } split "\n", qx(./strip_all ./config_map);
my @vars1 = values %var_map;
my @vars2 = split "\n", qx(./strip_all ./singleton_keys);
my %singletons;
my %singleton_has_key; 
{no warnings 'uninitialized';

map{ 
	my $target = $_;
	my ($singleton, $key) = $target =~ /^(\$\w+)->{(\w+)}/;
	
	{
		#say "singleton: $singleton, key: $key";
		$singletons{$singleton}++;
		$singleton_has_key{$singleton} //= {};
		$singleton_has_key{$singleton}{$key}++;
	}
} @vars1, @vars2
}
my @files = glob("*.p *.pl *.t");
=comment
use Data::Dumper::Concise;
print Dumper \%singletons;
print Dumper \%singleton_has_key;

print join " ", @files;
=cut

my $srevars = join '|', map{ s/\$//; $_ } keys %singletons;
my $sre = qr/\$($srevars)->{(\w+)}/;

map{ 
	my $filename = $_;
	my $contents = read_file($filename);
	while( $contents =~ /$sre/g )
	{
		my($singleton,$key) = ($1,$2);
		#say "found $singleton, $key";
		say "$filename: illegal key ", $singleton, '->{', $key , '}'
			if ! $singleton_has_key{"\$$singleton"}{$key}
	}
} @files;
